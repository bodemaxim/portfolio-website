//Здесь есть функция rock animation для sample meteorite


//считаем ширину экрана, чтобы метеорит пролетал от края до края

function calculateScreenWidth() {
  const fullScreenDiv = document.getElementById("meteorite-container");
  const rect = fullScreenDiv.getBoundingClientRect();
  console.log('rect метеорита ', rect);
  const rightPosition = rect.right;
  const leftPosition = rect.left;
  const screenWidth = (rightPosition - leftPosition).toFixed(0);
  return screenWidth;
}

let screenWidth = calculateScreenWidth();
//console.log('ширина экрана: ' + screenWidth);

function rockAnimation(meteoriteDiv) {
  const image = document.querySelector(meteoriteDiv);
  let position = screenWidth;
  image.style.left = position + "px";

  //расчитать ширину изображения метеорита
  const rect = image.getBoundingClientRect();
  const rightPosition = rect.right;
  const leftPosition = rect.left;
  const imageWidth = (rightPosition - leftPosition).toFixed(0);
  //console.log('ширина метеорита: ' + imageWidth)

  // создать анимацию
  let movementRate = null;
  movementRate = setInterval(frame, 5);

  function frame() {
    if (position < -(Number(screenWidth) + Number(imageWidth)))
      position = screenWidth;

    position--;
    image.style.left = position + "px";
  }
}

rockAnimation(".meteorite-sample");

//НОВЫЙ БЛОК**************************************************************************

//создание рандомного числа метеоритов

const numberOfDivs = Math.floor(Math.random() * 4) + 2;
const meteoriteContainer = document.getElementById('meteorite-container');

// Create the specified number of div elements and append them to 'meteorite-container'
for (let i = 0; i < numberOfDivs; i++) {
  const div = document.createElement('div');
  div.classList.add('meteorite-div');
  div.classList.add('threat');
  meteoriteContainer.appendChild(div);

  //добавляем в див метеорита картинку
  const img = document.createElement('img');
  img.src = 'media/rock1.png';
  img.classList.add('meteorite-img');
  div.appendChild(img);

  //Приписываем диву рандомное положение по высоте
  const screenHeight = window.innerHeight;
  const randomPosition = Math.floor(Math.random() * screenHeight);
  div.style.top = randomPosition + 'px';

  //применяем функцию анимации
  
}